<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
   
    <title>blm.io - Category: politics</title>
   
   <link>http://blm.io</link>
   <description>Data blog from benjaminlmoore.</description>
   <language>en-us</language>
   <managingEditor>B.L. Moore</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />

    
	  <item>
        <title>Scottish independence: what do the polls say?</title>
        <link>http://blm.io/blog/scottish-independence-polls</link>
		<author>benjaminlmoore</author>
		<pubDate>2014-08-26T00:00:00+01:00</pubDate>
		<guid>http://blm.io/blog/scottish-independence-polls</guid>
		<description><![CDATA[
		   <p>Living in Edinburgh it&#39;s been hard to avoid the build-up to Scotland&#39;s referendum on independence. On September 18<sup>th</sup> 2014, less than a month away as I write this, people living in Scotland will go to the polls to answer the question: Should Scotland be an independent country?</p>

<p>Over the last couple of years there&#39;s been a good amount of media coverage and &mdash; more interestingly, from my point of view &mdash; repeat polls to gauge opinion by various newspapers and tv stations. This invites an obvious question: how has the mood in Scotland varied over time with respect to a yes/no vote? And can we detect any biases among those publishing polls?</p>

<h2>The data</h2>

<p>Anthony Wells (<a href="https://twitter.com/anthonyjwells"><a href='https://github.com/anthonyjwells' class='user-mention'>@anthonyjwells</a></a>) of YouGov has put together <a href="http://ukpollingreport.co.uk/scottish-independence-referendum">a table</a> of survey results dating back to January 2012. Without too much hassle we can build a messy <code>data.frame</code> from this in R via the <code>XML</code> package:</p>
<div class="highlight"><pre><code class="language-r" data-lang="r">polls <span class="o">&lt;-</span> readHTMLTable<span class="p">(</span><span class="s">&quot;http://ukpollingreport.co.uk/scottish-independence-referendum&quot;</span><span class="p">,</span> skip.rows<span class="o">=</span><span class="m">1</span><span class="p">)[[</span><span class="m">1</span><span class="p">]]</span>
colnames<span class="p">(</span>polls<span class="p">)</span> <span class="o">&lt;-</span> c<span class="p">(</span><span class="s">&quot;pollster&quot;</span><span class="p">,</span> <span class="s">&quot;date&quot;</span><span class="p">,</span> <span class="s">&quot;yes&quot;</span><span class="p">,</span> <span class="s">&quot;no&quot;</span><span class="p">,</span>
                     <span class="s">&quot;non-voting&quot;</span><span class="p">,</span> <span class="s">&quot;dontknow&quot;</span><span class="p">,</span> <span class="s">&quot;yessplit&quot;</span><span class="p">)</span>
polls
<span class="c1">#                                   pollster     date yes no ...</span>
<span class="c1"># 1                     Survation/Daily Mail 07/08/14  37 50 ...</span>
<span class="c1"># 2                           YouGov/Sun (3) 07/08/14  35 55 ...</span>
<span class="c1"># 3                                 TNS-BMRB 07/08/14  32 45 ...  </span>
<span class="c1"># 4                       Ipsos MORI/STV (1) 03/08/14  40 54 ...</span>
<span class="c1"># 5                 Survation/Mail on Sunday 01/08/14  40 46 ...</span>
</code></pre></div>
<h2>Polls over time</h2>

<p>After a bit of data <a href="http://www.nytimes.com/2014/08/18/technology/for-big-data-scientists-hurdle-to-insights-is-janitor-work.html">&quot;janitor work&quot;</a>, we can visualise the poll trends over time. Given sampling error and other sources of noise (though I think these sample sizes tend to be decent), a loess model can pick out the long-term trends.</p>

<p><a href="/blog/img/indyref_trends.png" target="_blank">
<img class="imgfull" src="/blog/img/indyref_trends_thumb.png" />
</a></p>

<h2>Pollster biases</h2>

<p>If we accept the above models as a reasonable estimate of the expected poll response at a given time, we can analyse the residuals of actual poll results and look for systematic biases. In theory, with a respectable sample size (all have ~1000) and a reasonably well-stratified sampling method, we might expect polls results to be roughly normally distributed around the expected polls result &mdash; regardless of who comissioned or performed the poll.</p>

<p>Here are the distributions per poll publisher or commisioner, note that these are only for those who commisioned more than 1 poll in this dataset, and only those that my regex has been able to pick out.</p>

<p><a href="/blog/img/indyref_YesBiasNewspapers.png" target="_blank">
<img class="imgfull" src="/blog/img/indyref_YesBiasNewspapers_thumb.png" />
</a></p>

<p>The sample sizes here are generally too small to claim they are polling significantly above or below expectation, save for The Sunday Times (significantly more pro-Independence than expected, p = 7 &times; 10<sup>-4</sup>) and <a href="http://www.tns-bmrb.co.uk/home">TNS BMRB</a>, a &quot;think tank&quot; with offices in London and Edinburgh who seem to both perform and publish their own polls (p &lt; 1 &times; 10<sup>-3</sup>).</p>
<div class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># dplyr example (featuring messy subset abuse)</span>
group_by<span class="p">(</span>subset<span class="p">(</span>polls<span class="p">,</span> response <span class="o">==</span> <span class="s">&quot;Yes&quot;</span> <span class="o">&amp;</span>
         newspaper <span class="o">%in%</span> ordering<span class="p">[</span>ordering<span class="o">$</span>count <span class="o">&gt;</span> <span class="m">1</span><span class="p">,</span><span class="s">&quot;newspaper&quot;</span><span class="p">]),</span>
         newspaper<span class="p">)</span> <span class="o">%&gt;%</span>
  summarise<span class="p">(</span>p<span class="o">=</span>wilcox.test<span class="p">(</span>residual<span class="p">,</span> mu<span class="o">=</span><span class="m">0</span><span class="p">)</span><span class="o">$</span>p.value<span class="p">)</span>

Source<span class="o">:</span> local data frame <span class="p">[</span><span class="m">14</span> x <span class="m">2</span><span class="p">]</span>

<span class="c1">#              newspaper            p</span>
<span class="c1"># 1             TNS BMRB 0.0009765625</span>
<span class="c1"># 2             Ashcroft 0.5000000000</span>
<span class="c1"># 3   Scotland on Sunday 0.2500000000</span>
<span class="c1"># 4       Mail on Sunday 0.6250000000</span>
<span class="c1"># 5                  Sun 0.1250000000</span>
<span class="c1"># 6                Times 0.9101562500</span>
<span class="c1"># 7                  STV 0.8750000000</span>
<span class="c1"># 8           Daily Mail 0.5000000000</span>
<span class="c1"># 9         Daily Record 0.0625000000</span>
<span class="c1"># 10  Scotsman on Sunday 0.1250000000</span>
<span class="c1"># 11        Sunday Times 0.0007324219</span>
<span class="c1"># 12 Wings Over Scotland 0.5000000000</span>
<span class="c1"># 13         YesScotland 0.5000000000</span>
<span class="c1"># 14                 SNP 0.5000000000</span>
</code></pre></div>
<p><a href="/blog/img/indyref_YesBiasPollsters.png" target="_blank">
<img class="imgright" src="/blog/img/indyref_YesBiasPollsters_tiny.png" />
</a></p>

<p>Caveats here are that different polls have used different question sets, methods etc. so this isn&#39;t evidence for anything underhanded <em>per se</em>. We can look at the same thing per pollster, i.e. it seems reasonable to expect that while newspapers and the SNP might have reasons to publish polls in their favour, people conducting the polls should generally be more or less indifferently.</p>

<p>The results again are hampered by a small number of datapoints per pollster, but  the pollster <a href="https://www.panelbase.net/index.aspx">Panelbase</a> emerges as one providing significantly yes-skewed poll results (p &lt; 6 &times; 10<sup>-6</sup>). Interestingly they may be the only pollster here to have a <a href="https://www.panelbase.net/rewards.aspx">rewards system</a> inplace. The only other significantly non-zero biased results come again from TNS BMRB, who published most of their own polls in the above graph.</p>

<h2>Conclusion</h2>

<p>What do the polls say? Well, the majority of Scots have been against independence for the last couple of years (and beyond), however polls appear to have been more variable in recent months and the outcome of the referendum is expected to be close.</p>

<p><a href="/blog/img/indyref_yesPercent.png" target="_blank">
<img class="imgleft" src="/blog/img/indyref_yesPercent_tiny.png" />
</a></p>

<p>Since we have a (poorly fitting) linear model here we can &mdash; I must stress this is tongue-in-cheek &mdash; extrapolate to referendum day and get a prediction of the referendum result:</p>

<p style="font-size: larger; text-align:center">42.9% Yes</p>

<p style="font-size: smaller; text-align:center;">(99% confidence interval: 40.9 < <i>x</i> < 45.0)</p>

<hr />

<p style="text-align:right; font-size: .85rem;">R code to reproduce this analysis is available on
<a href="https://github.com/blmoore/blogR" target="_blank">Github</a>.</p>

		]]></description>
	  </item>
    
	  <item>
        <title>Guardian data blog — UK general election analysis in R</title>
        <link>http://blm.io/blog/uk-elections</link>
		<author>benjaminlmoore</author>
		<pubDate>2014-03-18T00:00:00+00:00</pubDate>
		<guid>http://blm.io/blog/uk-elections</guid>
		<description><![CDATA[
		   <p>The Guardian newspaper has for a few years been running a <a title="guardian data blog" href="http://www.theguardian.com/data" target="_blank">data blog</a> and has built up a massive repository of (often) well-curated datasets on a huge number of topics. They even have an <a title="list of data sets made available by the guardian" href="http://www.theguardian.com/news/datablog/interactive/2013/jan/14/all-our-datasets-index" target="_blank">indexed list</a> of all data sets they've put together or reused in their articles.</p>

<p>It's a great repository of interesting data for exploratory analysis, and there's a low barrier to entry in terms of getting the data into a useful form. Here's an example using UK election polling data collected over the last thirty years.</p>

<h2>ICM polling data</h2>

<p>The Guardian and <a title="ICM research" href="http://www.icmresearch.com/" target="_blank">ICM research</a> have conducted monthly polls on voting intentions since 1984, usually with a sample size of between 1,000 and 1,500 people. It's not made obvious how these polls are conducted (cold-calling?) but for what it's worth ICM is a member of the <a title="British Polling Council Wikipedia page" href="http://www.britishpollingcouncil.org/" target="_blank">British Polling Council</a>, and so hopefully tries to monitor and correct for things like the "<a title="shy tory factor" href="https://en.wikipedia.org/wiki/Shy_Tory_Factor" target="_blank">Shy Tory Factor</a>"—the observation that Conservative voters supposedly have (or had prior to '92)  a greater tendency to conceal their voting intentions than Labour supporters.</p>

<h2>Preprocessing</h2>

<p>The data is made available from The Guardian as a <code>.csv</code> file via Google spreadsheets <a title="data" href="https://docs.google.com/spreadsheet/ccc?key=0AonYZs4MzlZbcGhOdG0zTG1EWkVPOEY3OXRmOEIwZmc#gid=0" target="_blank">here</a> and requires minimal cleanup, cut the source information from the end of the file and you can open it up in R.</p>
<div class="highlight"><pre><code class="language-r" data-lang="r">sop <span class="o">&lt;-</span> read.csv<span class="p">(</span><span class="s">&quot;StateOfTheParties.csv&quot;</span><span class="p">,</span> stringsAsFactors<span class="o">=</span><span class="k-Variable">F</span><span class="p">)</span>
<span class="c1">## Data cleanup</span>
sop<span class="p">[,</span><span class="m">2</span><span class="o">:</span><span class="m">5</span><span class="p">]</span> <span class="o">&lt;-</span> apply<span class="p">(</span>sop<span class="p">[,</span><span class="m">2</span><span class="o">:</span><span class="m">5</span><span class="p">],</span> <span class="m">2</span><span class="p">,</span> <span class="kr">function</span><span class="p">(</span>x<span class="p">)</span> as.numeric<span class="p">(</span>gsub<span class="p">(</span><span class="s">&quot;%&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> x<span class="p">)))</span>
sop<span class="p">[,</span><span class="m">1</span><span class="p">]</span> <span class="o">&lt;-</span> as.Date<span class="p">(</span>sop<span class="p">[,</span><span class="m">1</span><span class="p">],</span> format<span class="o">=</span><span class="s">&quot;%d-%m-%Y&quot;</span><span class="p">)</span>
colnames<span class="p">(</span>sop<span class="p">)[</span><span class="m">1</span><span class="p">]</span> <span class="o">&lt;-</span> <span class="s">&quot;Date&quot;</span>
<span class="c1"># correct for some rounding errors leading to 101/99 %</span>
sop<span class="o">$</span>rsum <span class="o">&lt;-</span> apply<span class="p">(</span>sop<span class="p">[,</span><span class="m">2</span><span class="o">:</span><span class="m">5</span><span class="p">],</span> <span class="m">1</span><span class="p">,</span> sum<span class="p">)</span>
table<span class="p">(</span>sop<span class="o">$</span>rsum<span class="p">)</span>
sop<span class="p">[,</span><span class="m">2</span><span class="o">:</span><span class="m">5</span><span class="p">]</span> <span class="o">&lt;-</span> sop<span class="p">[,</span><span class="m">2</span><span class="o">:</span><span class="m">5</span><span class="p">]</span> <span class="o">/</span> sop<span class="o">$</span>rsum
</code></pre></div>
<p>Then after <code>melt</code>ing the data.frame down (full code at the end of the post), you can get a quick overview with <code>ggplot2</code>.</p>

<p><a href="http://benjaminlmoore.files.wordpress.com/2014/03/area_plot.png"><img class="imgfull" alt="UK general election overview 1984-2014" src="/blog/img/area_plot.png" width="503" height="344"/></a></p>

<h2>Election breakdown</h2>

<p>The area plot is a nice overview but not that useful quantitatively. Given that the dataset includes general election results as well as opinion polling, it's straightforward to split the above plot by this important factor. I also found it useful to convert absolute dates to be relative to the election they precede. R has an object class, <code>difftime</code>, which makes this easy to accomplish and calling <code>as.numeric()</code> on a difftime object converts it to raw number of days (handily accounting for things like leap years).</p>

<p>These processing steps lead to a clearer graph with more obvious stories, such as the gradual and monotonic decline of support for Labour during the Blair years. </p>

<p><a href="http://benjaminlmoore.files.wordpress.com/2014/03/splitbyelection_2.png"><img src="/blog/img/splitbyelection_2.png" alt="UK general election data split by election period" width="500" height="382" class="imgfull" /></a></p>

<p><strong>NB</strong> Facet headers show the election year and result of the election with which the (preceding) points are plotted relative to.</p>

<h2>Next election's result</h2>

<p>I originally wanted to look at this data to get a feel for how things are looking before next year's (2015) general election, maybe even running some predictive models (obviously I'm no <a href="http://fivethirtyeight.com/" title="fivethirtyeight" target="_blank">fivethirtyeight.com</a>). </p>

<p>However, graphing the trends of public support for the two main UK parties hints it's unlikely to be a fruitful endeavour at this point, and with the above graphs showing an ominous increasing support for "other" parties (not accidentally coloured <a href="https://www.ukip.org/" title="ukip" target="_blank">purple</a>), it looks like with about 400 days to go the 2015 general election is still all to play for.</p>

<p><a href="http://benjaminlmoore.files.wordpress.com/2014/03/lab_con.png"><img src="/blog/img/lab_con.png" alt="lab_con" width="500" height="607" class="imgfull" /></a></p>

<hr />

<p style="text-align:right; font-size:.85rem;">Reproduce and improve this analysis with help from
<a href="https://gist.github.com/blmoore/9631779" target="_blank">this gist</a>.<br \>
This post was originally published on my
<a href="http://benjaminlmoore.wordpress.com/2014/03/18/guardian-data-blog-uk-elections/" target="_blank">Wordpress blog</a>.</p>

		]]></description>
	  </item>
    
  </channel>
</rss>
