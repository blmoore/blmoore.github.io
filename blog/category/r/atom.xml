<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
   
    <title>blm.io - Category: r</title>
   
   <link>http://blm.io</link>
   <description>Data blog from benjaminlmoore.</description>
   <language>en-us</language>
   <managingEditor>B.L. Moore</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />

    
	  <item>
        <title>Are more expensive motorcycle helmets safer?</title>
        <link>http://blm.io/blog/motorcycle-helmet-safety-price</link>
		<author>benjaminlmoore</author>
		<pubDate>2014-07-01T00:00:00+01:00</pubDate>
		<guid>http://blm.io/blog/motorcycle-helmet-safety-price</guid>
		<description><![CDATA[
		   <p>Apparently an 80s commerical for the helmet manufacturer <a href="http://www.bellhelmets.com/">Bell</a> bore the slogan:
<em>&quot;If you&#39;ve got a $10 head, wear a $10 helmet&quot;</em>. Nowadays it&#39;s a deeply-ingrained
and widely accepted idea among bikers that it&#39;s worth
spending a lot of money on your headgear. A top-of-the-line Arai can sell for
almost four figures, particularly if you want a nice
<a href="http://www.revzilla.com/motorcycle/arai-corsair-v-joey-dunlop-2014-le-helmet">race rep</a>
 design, but what are you getting for your money and, in particular, is it
 any safer than a helmet you pickup for a tenth of that price.</p>

<p>There are various minimum safety standards for bike helmets. The US has
<a href="http://www.smf.org/docs/articles/dot">Snell and DOT</a>, whereas the UK
requires the snappily named
<a href="http://shop.bsigroup.com/ProductDetail/?pid=000000000030140499">BS 6658:1985 specification</a>
or the European standard, ECE22.05, <a href="http://www.whitedogbikes.com/whitedogblog/motorbike-helmet-road-legal-uk/">apparently equivalent</a>
to the US DOT. But these are <em>minimum standards</em> that manufacturers must design towards,
as such they don&#39;t help differentiating between ratified helmets.</p>

<h2>SHARP ratings</h2>

<p><img class="imgright" src="/blog/img/sharp_logo.png" /></p>

<p>In the UK, an impartial government safety scheme has been set up with its own forced acronym
(the Safety Helmet Assessment and Rating Programme, <a href="http://sharp.direct.gov.uk/">SHARP</a>)
to try to scientifically assess how protective helmets are in <a href="http://sharp.direct.gov.uk/node/33">simulated crash-like tests</a>,
designed using real-world data. Take a look at this <a href="http://sharp.direct.gov.uk/content/animation">neat animation</a>
for more information.</p>

<p>They condense the data from 32 tests over seven replicates into a simple 5-star rating,
with 5 star helmets <a href="http://sharp.direct.gov.uk/content/ratings">said to provide</a>
&quot;good levels of protection right around the helmet&quot;. As of April 2014, their database
contains a total of 328 helmet models, a decent set of results for some further analysis.</p>

<h2>Price ranges per brand</h2>

<p>A good starting point is to look at the spread of helmet prices, identifying the premium
brands and the cheapies that have been tested by SHARP.</p>

<p><a href="/blog/img/motorcycle_helmet_brands_pricerange.png" target="_blank">
<img class="imgfull" src="/blog/img/motorcycle_helmet_brands_pricerange_thumb.png" />
</a></p>

<p>We can see why Bell might be keen to push the idea that we all need expensive helmets!</p>

<h2>Helmet types</h2>

<p>Helmets in the dataset are spit into two categories: full-face and &quot;system&quot;. As
far as I can tell the latter refer to what I would call &quot;flip-front&quot; helmets.
These have a hinged jaw section which you can raise either to use as an open-face helmet or
more commonly so as to pay for your petrol without scaring the cashier.</p>

<p><img class="imgfull" src="/blog/img/motorcycle_helmetkey.png" /></p>

<p>I&#39;m not aware this has been conclusively proven but the general feeling among bikers
seems to be that a flip-front helmet offers less protection than a more rigid full-face.
Does the SHARP data agree?</p>

<p><a href="/blog/img/motorcyle_helmet_type.png" target="_blank">
<img class="imgfull" src="/blog/img/motorcyle_helmet_type_thumb.png" />
</a></p>

<p>There is a greater proportion of top-rated full-face helmets, and the most
common rating for flip-front lids is 3 stars, compared to 4 for full-face. However
full-face helmets dominate the dataset (86% of helmets tested by SHARP), and most brands
will only produce a couple of flip models, save the specialists like
<a href="http://www.schuberth.com/en/businesssegments/motorcycle.html">Schuberth</a>.</p>

<h2>Cost vs. Protection</h2>

<p>The main question to be answered with this dataset is: are more expensive helmets
more protective, and if so to what degree?</p>

<p><a href="/blog/img/motorcycle_helmet_overalltrend.png" target="_blank">
<img class="imgfull" src="/blog/img/motorcycle_helmet_overalltrend_thumb.png" />
</a></p>

<p>Overall yes, there&#39;s a non-zero linear regression coefficient that suggests each additional
Â£ spent on a helmet returns 2 &times; 10<sup>-4</sup> SHARP rating points. It&#39;s
worth noting are that this trend explains a measly 6% of the variance in helmet ratings and,
more interestingly, the y-intercept is a fairly decent 3.1 rating, suggesting there are some
cheap but highly rated helmets in the dataset.</p>

<p>We can break this relationship trend down by manufacturer:</p>

<p><a href="/blog/img/motorcycle_helmet_brandtrends.png" target="_blank">
<img class="imgfull" src="/blog/img/motorcycle_helmet_brandtrends_thumb.png" />
</a></p>

<p>There are some striking differences here. Entry brands like <a href="http://www.nitro-helmets.com/">Nitro</a>
seem good examples of where a higher outlay is likely to result in significantly better
crash protection. The <a href="http://www.whyarai.co.uk/">Arai</a> premium brand, however, has little relationship between
price and protection, with most of their range scoring the same 3 out of 5 rating.</p>

<p>You&#39;ll notice the points in these graphs have been jittered to prevent them all stacking
at the integer ratings, and give the illusion of a (preferable) continuous rating.
At this point any statisticians reading may criticise the use of linear
regression here (on unjittered values, of course), as the rating system is really an ordinal variable and so would be
better suited to something like an <a href="https://en.wikipedia.org/wiki/Ordered_logit">ordered logit model</a>.
With these caveats in mind I won&#39;t overinterpret the above linear models.</p>

<h2>Best and worsts</h2>

<p>So to finish, two important questions: what are the best/worst value for money helmets,
and which brands overall output the most protective and reasonably priced lids?</p>

<h3>Best helmets</h3>

<!-- html table generated in R 3.1.0 by xtable 1.7-3 package -->

<!-- Tue Jul  1 21:52:15 2014 -->

<TABLE border=1>
<TR> <TH>  </TH> <TH> Make </TH> <TH> Model </TH> <TH> Type </TH> <TH> Price (GBP) </TH> <TH> Rating </TH>  </TR>
  <TR> <TD align="right"> 1 </TD> <TD> Duchinni </TD> <TD> D832 </TD> <TD> Full face </TD> <TD align="right"> 59.99 </TD> <TD align="right">   5 </TD> </TR>
  <TR> <TD align="right"> 2 </TD> <TD> MT </TD> <TD> Revenge </TD> <TD> Full face </TD> <TD align="right"> 64.99 </TD> <TD align="right">   5 </TD> </TR>
  <TR> <TD align="right"> 3 </TD> <TD> Lazer </TD> <TD> LZ6 </TD> <TD> Full face </TD> <TD align="right"> 70.00 </TD> <TD align="right">   5 </TD> </TR>
  <TR> <TD align="right"> 4 </TD> <TD> Nitro </TD> <TD> Aikido </TD> <TD> Full face </TD> <TD align="right"> 70.00 </TD> <TD align="right">   5 </TD> </TR>
  <TR> <TD align="right"> 5 </TD> <TD> Caberg </TD> <TD> Trip </TD> <TD> System </TD> <TD align="right"> 90.00 </TD> <TD align="right">   5 </TD> </TR>
  <TR> <TD align="right"> 6 </TD> <TD> Caberg </TD> <TD> V2 407 </TD> <TD> Full face </TD> <TD align="right"> 90.00 </TD> <TD align="right">   5 </TD> </TR>
  <TR> <TD align="right"> 7 </TD> <TD> Marushin </TD> <TD> 777 Samura </TD> <TD> Full face </TD> <TD align="right"> 99.00 </TD> <TD align="right">   5 </TD> </TR>
  <TR> <TD align="right"> 8 </TD> <TD> Marushin </TD> <TD> 777 Tiger </TD> <TD> Full face </TD> <TD align="right"> 99.00 </TD> <TD align="right">   5 </TD> </TR>
  <TR> <TD align="right"> 9 </TD> <TD> Caberg </TD> <TD> V2R </TD> <TD> Full face </TD> <TD align="right"> 110.00 </TD> <TD align="right">   5 </TD> </TR>
  <TR> <TD align="right"> 10 </TD> <TD> Nitro </TD> <TD> N1700VF </TD> <TD> Full face </TD> <TD align="right"> 119.00 </TD> <TD align="right">   5 </TD> </TR>
   </TABLE>

<h3>Worst helmets</h3>

<!-- html table generated in R 3.1.0 by xtable 1.7-3 package -->

<!-- Tue Jul  1 21:54:57 2014 -->

<TABLE border=1>
<TR> <TH>  </TH> <TH> Make </TH> <TH> Model </TH> <TH> Type </TH> <TH> Price (GBP) </TH> <TH> Rating </TH>  </TR>
  <TR> <TD align="right"> 1 </TD> <TD> Schuberth </TD> <TD> S1 Pro </TD> <TD> Full face </TD> <TD align="right"> 450.00 </TD> <TD align="right">   2 </TD> </TR>
  <TR> <TD align="right"> 2 </TD> <TD> Schuberth </TD> <TD> R1 </TD> <TD> Full face </TD> <TD align="right"> 320.00 </TD> <TD align="right">   2 </TD> </TR>
  <TR> <TD align="right"> 3 </TD> <TD> NZI </TD> <TD> Fibrup </TD> <TD> System </TD> <TD align="right"> 256.80 </TD> <TD align="right">   2 </TD> </TR>
  <TR> <TD align="right"> 4 </TD> <TD> Arai </TD> <TD> Condor </TD> <TD> Full face </TD> <TD align="right"> 240.00 </TD> <TD align="right">   2 </TD> </TR>
  <TR> <TD align="right"> 5 </TD> <TD> Dainese </TD> <TD> Airstream </TD> <TD> Full face </TD> <TD align="right"> 190.00 </TD> <TD align="right">   1 </TD> </TR>
  <TR> <TD align="right"> 6 </TD> <TD> Vemar </TD> <TD> VSREV </TD> <TD> Full face </TD> <TD align="right"> 190.00 </TD> <TD align="right">   2 </TD> </TR>
  <TR> <TD align="right"> 7 </TD> <TD> KBC </TD> <TD> VR2R </TD> <TD> Full face </TD> <TD align="right"> 180.00 </TD> <TD align="right">   2 </TD> </TR>
  <TR> <TD align="right"> 8 </TD> <TD> KBC </TD> <TD> VR4R </TD> <TD> Full face </TD> <TD align="right"> 179.99 </TD> <TD align="right">   2 </TD> </TR>
  <TR> <TD align="right"> 9 </TD> <TD> Harley Davidson </TD> <TD> Laguna II </TD> <TD> Full face </TD> <TD align="right"> 165.00 </TD> <TD align="right">   1 </TD> </TR>
  <TR> <TD align="right"> 10 </TD> <TD> CMS </TD> <TD> GP5F </TD> <TD> Full face </TD> <TD align="right"> 159.00 </TD> <TD align="right">   1 </TD> </TR>
   </TABLE>

<h3>Brand summaries</h3>

<p>Here I&#39;m plotting the mean SHARP rating across each brand&#39;s tested helmets, against
their median helmet price which were then ranked 1 to 22, with 22 being the most
expensive brand on average.</p>

<p><a href="/blog/img/motorcycle_helmet_brandsummary.png" target="_blank">
<img class="imgfull" src="/blog/img/motorcycle_helmet_brandsummary_thumb.png" />
</a></p>

<p>Grey rectangles indicate both the cheapest third of brands,
and the safest third. Much to my surprise, the only brand falling in the intersection
of these two is Marushin, which is a new brand to me but have been
<a href="http://www.visordown.com/product-features/five-safest-motorcycle-helmets-for-under-150/18341-6.html">noted previously</a>
for their highly-rated helmets.</p>

<p>I should quickly point out that protection isn&#39;t the only reason people splash out on
premium helmets; they can be lighter, more comfortable, quieter and look better &mdash;
plus with that Shoei symbol above your visor no-one will take you for a
&quot;<a href="http://www.urbandictionary.com/define.php?term=Squid">squid</a>&quot;. However the old
Bell advertising slogan seems a bit hollow now, as the crafty consumer can protect their
priceless head with a 5-star rated helmet for as little as 60 GBP (100 USD).</p>

<hr />

<p style="text-align:right; font-size: .85rem;">Full code to reproduce these
plots and analysis will be available on
<a href="https://github.com/blmoore/blogR" target="_blank">Github</a>.</p>

		]]></description>
	  </item>
    
	  <item>
        <title>What are the most common RNG seeds used in R scripts on Github?</title>
        <link>http://blm.io/blog/prng-seeds</link>
		<author>benjaminlmoore</author>
		<pubDate>2014-03-06T00:00:00+00:00</pubDate>
		<guid>http://blm.io/blog/prng-seeds</guid>
		<description><![CDATA[
		   <p>In the R programming language, the random number generator (RNG) is seeded each session using the current time and process ID. Via the magic of the popular <a href="https://en.wikipedia.org/wiki/Mersenne_twister" target="_blank">Mersenne Twister PRNG</a>, the values stored in <code>.Random.seed</code> are used sequentially each time "randomness" is invoked in a function. This means, of course, that the same function run in different R sessions can produce varying results, and in the case of modelling a system sensitive to initial conditions the observed differences could be huge. </p>

<p>For this reason it's common to manually set the PRNG seed (using <code>set.seed()</code> in R), thereby creating the same <code>.Random.seed</code> vector which can be drawn from in your analysis to produce reproducible results. The actual value passed to this function is irrelevant for practical purposes &mdash; for whatever reason I generally user the same number across projects (42) &mdash; so this made me wonder: what values do the major R developers tend to pick?</p>

<h2>To Github</h2>

<p>The <a href="http://developer.github.com/v3/" title="github API" target="_blank">Github API</a> is currently in a transitional period between versions 2 and 3 and has (annoyingly) limited code search results to specific users or organisations. This means to perform a code search programmatically, I'll need a list of R users.</p>

<h3>Google BigQuery</h3>

<p>One way of building a list is through <a href="http://www.githubarchive.org/" title="Github archive" target="_blank">Github archive</a>. The dev (<a href="http://www.igvita.com/" title="Ilya Grigorik" target="_blank">Ilya Grigorik</a>) has put up a public dataset with <a href="https://developers.google.com/bigquery/" title="BigQuery" target="_blank">Google BigQuery</a>, which is a neat cloud-based platform for querying huge datasets. My SQL isn't all that, but the Google BigQuery interface is really functional (e.g. it autocompletes table fields) and makes it easy to get the data you're looking for.</p>

<p><img src="/blog/img/screen-shot-2014-03-06-at-12-21-52.png" alt="Fishing for prolific R users via Google BigQuery." width="500" height="499" class="imgfull" /></p>

<p>In this case I pulled out R code repositories ordered by repo pushes (as a heuristic for codebase size and activity, I guess) with their owner's username. It was this list of names I then used for the API query.</p>

<h3>Github API</h3>

<p>It looks like there's a decent <a href="https://github.com/cscheid/rgithub" title="R bindings" target="_blank">set of R bindings</a> for the Github API, but it's not clear how they work with code search, so I opted for the messier option of calling curl through <code>system()</code>. To build the command to search the API per user:</p>
<div class="highlight"><pre><code class="language-r" data-lang="r">getCMD <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>user<span class="p">){</span>
  cmd <span class="o">&lt;-</span> paste0<span class="p">(</span><span class="s">&quot;curl -H &#39;Accept: application/vnd.github.v3.text-match+json Authorization: token &quot;</span><span class="p">,</span>
    oauth<span class="p">,</span> <span class="s">&quot;&#39;     &#39;https://api.github.com/search/code?q=set.seed+in:file+language:R+user:&quot;</span><span class="p">,</span>
    user<span class="p">,</span><span class="s">&quot;&amp;amp;page=1&amp;amp;per_page=500&#39; | grep &#39;fragment&#39; -&quot;</span><span class="p">)</span>
  <span class="kr">return</span><span class="p">(</span>cmd<span class="p">)</span>
<span class="p">}</span>
</code></pre></div>
<p>As you can see this is pretty rough and ready, there may be a pagination issue if someone sets PRNG seeds everywhere but it'll do.</p>

<p>You can then run the command and pull out the returned string matches for the query, in this case I searched for "set.seed" and then used Haldey Wickham's <code>stringr</code> <a href="http://cran.r-project.org/web/packages/stringr/index.html" title="stringr" target="_blank">R package</a> to regexp out the number (if any) passed to the function.</p>
<div class="highlight"><pre><code class="language-r" data-lang="r">getPRNGseeds <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>user<span class="p">){</span>
  print<span class="p">(</span>user<span class="p">)</span>
  api.result <span class="o">&lt;-</span> system<span class="p">(</span>getCMD<span class="p">(</span>user<span class="p">),</span> intern<span class="o">=</span><span class="k-Variable">T</span><span class="p">)</span>
  <span class="kr">if</span><span class="p">(</span>is.null<span class="p">(</span>attr<span class="p">(</span>api.result<span class="p">,</span> <span class="s">&quot;status&quot;</span><span class="p">)))</span> <span class="p">{</span>
    seeds <span class="o">&lt;-</span> cbind<span class="p">(</span>user<span class="p">,</span>
        str_match<span class="p">(</span>api.result<span class="p">,</span> <span class="s">&quot;set\\.seed\\((\\d+)\\)&quot;</span><span class="p">)[,</span><span class="m">2</span><span class="p">])</span>
    Sys.sleep<span class="p">(</span><span class="m">10</span><span class="p">)</span>
    <span class="kr">return</span><span class="p">(</span>seeds<span class="p">)</span>
  <span class="p">}</span> <span class="kr">else</span> <span class="p">{</span>
    cat<span class="p">(</span>user<span class="p">,</span> <span class="s">&quot; failed&quot;</span><span class="p">)</span>
    <span class="kr">return</span><span class="p">(</span>cbind<span class="p">(</span>user<span class="p">,</span> <span class="kc">NA</span><span class="p">))</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div>
<p>The Github API spits out JSON data (ignored and just grepped out in the above) so I looked into a couple of smarter ways of parsing it. Firstly there's the <code>jsonlite</code> <a href="https://github.com/jeroenooms/jsonlite#readme" title="jsonlite" target="_blank">R package</a> which offers the <code>fromJSON()</code> function to import JSON data into what resembles a sometimes-hard-to-work-with nested R object. It seems like the Github API query results return too many nested layers to produce a useful object in this case. Another option is <a href="http://stedolan.github.io/jq/" title="jq" target="_blank">jq</a>, a command-line program which has a neat syntax for dealing specifically with the JSON data structure &mdash; I'll definitely be using it for more complex JSON wrangling in the future.</p>

<h2>The data</h2>

<p>Despite the harsh search limitations I ended up with 27 users who owned the top 100 R repositories, and of those 15 used <code>set.seed()</code> somewhere (or at least something like it). However the regex fails in some cases &mdash; where a variable is being passed to the function instead of an integer, for one. Long story short, I scraped together 187 lines of <code>set.seed(\d+)</code> from some of the big names in the R community and here's how the counts looked:</p>

<p><a href="http://benjaminlmoore.files.wordpress.com/2014/03/prng.png"><img src="/blog/img/prng.png" alt="RNG seeds" width="500" height="833" class="imgfull" /></a></p>

<p>So plain old <strong>1</strong> is the stand-out winner! </p>

<p>There's a few sequences in there (<strong>123</strong>, <strong>321</strong>, <strong>1234</strong>, <strong>12345</strong>) and some date references (<strong>2011</strong>, <strong>20051028</strong>), but surprisingly few programmer in-jokes or web-culture references, save a lone <strong>1337</strong> and I guess some binary. </p>

<p><strong>1410</strong> (or <strong>1014</strong> in less-sensible countries) and <strong>141079</strong> look like they could be a certain R developer's birthday and birth year, but that's pure speculation :)</p>

<p>Here's one of those awful wordle / wordcloud things too.</p>

<p><a href="http://benjaminlmoore.files.wordpress.com/2014/03/wordle_crop.png"><img src="/blog/img/wordle_crop.png" alt="wordle_crop" width="300" height="287" class="imgfull" /></a></p>

<p>Hopefully as the roll-out of the v3 Github API progresses the current search restriction will be lifted, still this was a fun glimpse at other programmer's conventions!</p>

<hr />

<p style="text-align:right; font-size: .85rem;">Full code to reproduce in this <a href="https://gist.github.com/blmoore/9400832">gist</a>.<br />
This post was originally published on my
<a href="http://benjaminlmoore.wordpress.com/2014/03/06/most-common-rng-seeds-r-github/" target="_blank">Wordpress blog</a>.</p>

		]]></description>
	  </item>
    
	  <item>
        <title>Slidify: Modern, simple presentations written in R Markdown</title>
        <link>http://blm.io/blog/slidify</link>
		<author>benjaminlmoore</author>
		<pubDate>2014-02-24T00:00:00+00:00</pubDate>
		<guid>http://blm.io/blog/slidify</guid>
		<description><![CDATA[
		   <p>As a LaTeX fan I'm used to using Beamer for presentations, but the built-in <a href="http://www.hartwork.org/beamer-theme-matrix/" target="_blank">themes</a>Â are definitely starting to show their age --- and writing a custom <code>.sty</code> file looks like a nightmare --- so for a while I've been looking at trying out an HTML5 framework.</p>

<p><a href="http://lab.hakim.se/reveal-js/" target="_blank"><img class="imgright" alt="Reveal.js is a great looking HTML presentation framework from Hakim El Hattab." src="/blog/img/screen-shot-2014-02-24-at-19-55-11.png" width="150" height="102" /></a></p>

<p>The first nice option I noticed wasÂ <a href="http://lab.hakim.se/reveal-js/" target="_blank">reveal.js</a>Â which seems to find a solid balance between looking sleek and modern, but not generating a prezi-like rollercoaster of a talk. Another project I came across,Â <a href="http://bartaz.github.io/impress.js/" target="_blank">impress.js</a>,Â probably leans towards the latter, and needs a decent array of web-dev skills to really customise.</p>

<p>These are both nice solutions but require decent web development skills to take advantage of, else offer limited web UI front-ends. An ideal solution for me would be simple to write and look great from the outset, needing only minor CSS, Javascript and HTML tweaks to build a good-looking and functional slide deck.</p>

<h2>Slidify</h2>

<p>Enter <a href="http://slidify.org/" target="_blank">slidify</a>Â written byÂ Ramnath Vaidyanathan (<a href="https://github.com/ramnathv" target="_blank">github</a>), a wrapper of several libraries which allows you to go from simple R Markdown to slick HTML presentations. The <a href="http://slidify.org/samples/intro/" target="_blank">introductory presentation</a>Â gives a nice overview of what's possible and how simple these slide decks can be to write.</p>

<p>As the author modestly points out, slidify really is a go-between to other R packages:</p>

<ul>
<li><code>knitr</code> (<a href="http://yihui.name/knitr/" target="_blank">link</a>) â (a replacement for Sweave) think IPython notebook for R and other languages</li>
<li><code>whisker</code> (<a href="https://github.com/edwindj/whisker" target="_blank">link</a>) â for making use of <a href="http://mustache.github.io/mustache.5.html" target="_blank">mustache</a>Â (geddit?) "logic-less templating", which reminds me a lot of MediaWiki markup templates with extended functionality</li>
<li>R Markdown â the markdown extension introduced by the <a href="http://www.rstudio.com/" target="_blank">RStudio</a> team</li>
</ul>

<p>Together with slidify these packages make writing and customising presentations a breeze, so install the library from github (using Hadley Wickham's <code>devtools</code>) per the instructions <a href="http://slidify.org/start.html" target="_blank">here</a>. It also comes with some great default themes, like Google's io2012 (my favourite) and <a href="http://imakewebthings.com/deck.js/" target="_blank">deck.js</a>. The video below shows how to get started authoring presentations much better than I could:</p>

<div style="margin-left:auto; margin-right: auto; width:480px;">
<iframe width="480" height="360" src="//www.youtube.com/embed/I95GOmLc7TA" frameborder="0" allowfullscreen></iframe></div>

<h2>Features</h2>

<p>There's a tonne of cool things slidify can do that I haven't even explored yet, but that look great. Of course, through knitr you can embed R code, including analysis and plot generation, in your presentation, bringing together reproducible analysis and neat presentation of your results. Even cooler, it plays nice with <a href="http://rcharts.io/" target="_blank">rCharts</a>Â â from the same author â allowing interactive charts to be embedded in presentations; oh and Shiny applications can be added too, according to <a href="http://slidify.github.io/dcmeetup/demos/interactive/" target="_blank">this</a>.</p>

<p>Slidify enables straightforward github publishing (just <code>author()</code>) and RStudio allows quick upload to <a href="http://rpubs.com/" target="_blank">RPubs</a>, both make it trivial to have an online and archived copy of your presentation.</p>

<h3>Convert to PDF</h3>

<p>A PDF is a nice security blanket to have if you're worried about unforeseeable display issues on presentation day â it's a format designed to be environment independent after all. With the io2012 theme, this can be done natively from chrome using the print dialogue,Â <em>however </em>I<em>Â </em>consistently found that for my presentation at least, the active slide you are viewing and and sometimes an adjacent slide is glitched in the PDF output.</p>

<p><a href="http://benjaminlmoore.files.wordpress.com/2014/02/screen-shot-2014-02-24-at-22-37-58.png"><img class="imgright" alt="Chrome print PDF reproducibly bugs out on the active slide each time." src="/blog/img/screen-shot-2014-02-24-at-22-37-58.png" width="240" height="118" /></a>
</p></p>

<p>The hacky fix for this was to go to the final slide of the talk, print all but the last slide to PDF, then go back to an earlier slide and only print to file that remaining last slide. Then <a href="http://support.apple.com/kb/ht4075" target="_blank">stitch these files together</a> in Preview (assuming OS X), or <code>Imagemagick</code> or whatever.</p>

<p>Other than this active-slide glitch the PDF conversion worked surprisingly well and the output is passable as a decent presentation, albeit without the finesse of the subtle default transitions.</p>

<h4>Update:</h4>

<p>On twitter Ramnath <a href="https://twitter.com/ramnath_vaidya/status/438466893931094016" target="_blank">points out</a> that this is a recent problem with the Chrome browser, and Safari or Firefox should be able to export to PDF without issue. A quick check with Safari confirms that's the case for my presentation.</p>

<h2>Issues</h2>

<p>There were a couple of things that either can't be done (without digging deep into the js) or at least things I couldn't figure out after some (non-extensive) googling.</p>

<h3>Image features</h3>

<p>First, making things appear sequentially (like PowerPoint bullet points) is achieved simply with:</p>
<div class="highlight"><pre><code class="language-r" data-lang="r"><span class="o">---</span>
<span class="c1">## Slide title</span>
<span class="o">&gt;</span> <span class="o">*</span> First bullet point to appear
<span class="o">&gt;</span> <span class="o">*</span> Second...
</code></pre></div>
<p>But for an image to then appear in the same way seems to require a continuation of the <code>ul</code>, i.e. your image needs a bullet point (?). Maybe I'm wrong on this but when included without the bullet point, the image seems to then precede the other bulleted content.</p>

<p>Another issue was resizing and centering images. I made use of the code fromÂ <a href="http://stackoverflow.com/a/18640582/1274516" target="_blank">this answer</a> on SO to add the quick and dirty CSS / jQuery to auto-centre / reduce oversized images for the slideshow. For me it would be nice for this to be default behaviour, but I suppose for a web developer this is trivial everyday stuff:</p>
<div class="highlight"><pre><code class="language-r" data-lang="r"><span class="o">&lt;!--</span> Limit image width and height <span class="o">--&gt;</span>
<span class="o">&lt;</span>style type<span class="o">=</span><span class="s">&quot;text/css&quot;</span><span class="o">&gt;</span>
img <span class="p">{</span>
  max<span class="o">-</span>height<span class="o">:</span> <span class="m">560</span>px<span class="p">;</span>
  max<span class="o">-</span>width<span class="o">:</span> <span class="m">964</span>px<span class="p">;</span>
<span class="p">}</span>
<span class="o">&lt;/</span>style<span class="o">&gt;&lt;/</span>p<span class="o">&gt;</span>
<span class="o">&lt;</span>p<span class="o">&gt;&lt;!--</span> Center image on slide <span class="o">--&gt;</span>
<span class="o">&lt;</span>script type<span class="o">=</span><span class="s">&quot;text/javascript&quot;</span> src<span class="o">=</span><span class="s">&quot;http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.7.min.js&quot;</span><span class="o">&gt;&lt;/</span>script<span class="o">&gt;</span>
<span class="o">&lt;</span>script type<span class="o">=</span><span class="s">&quot;text/javascript&quot;</span><span class="o">&gt;</span>
<span class="o">$</span><span class="p">(</span><span class="kr">function</span><span class="p">()</span> <span class="p">{</span>
  <span class="o">$</span><span class="p">(</span><span class="s">&quot;p:has(img)&quot;</span><span class="p">)</span>.addClass<span class="p">(</span><span class="s">&#39;centered&#39;</span><span class="p">);</span>
<span class="p">});</span>
<span class="o">&lt;/</span>script<span class="o">&gt;</span>
</code></pre></div>
<h3>RStudio integration</h3>

<p>This caused some confusion for me, but RStudio actually has its own presentation framework and uses slightly different markdown syntax to create it. On reviewing the two, it doesn't seem as developed as Slidify yet, and the defaults aren't as polished as the io2012 deck. The confusing part is, somewhere between the packages <code>slidify</code> and <code>slidifyLibraries</code>Â a function overloads RStudio's <code>Knit HTML</code> button, faking seamless integration.</p>

<p>The result is that the IDE is a great place to write the presentation, but I can't help thinking, as was mentioned <a href="https://twitter.com/kohske/status/436355371498618880" target="_blank">on twitter recently</a>, that the slidify framework would make a nice alternative or replacement for RStudio's current offering.</p>

<h3>Customising the title slide</h3>

<p>One of the problems I had was editing the theme's title slide. Most of the presentation is amenable to CSS hacking but the title slide is stubbornly hardcoded. (Well, it's not of course but the file is buried in the library install.)</p>

<p>The way I got at this file was by changing the presentation mode (within the YAML frontmatter) toÂ <code>selfcontained</code>, and run slidify, copying the libraries folder to the same directory as yourÂ <code>.Rmd</code>Â file. Then, for the io2012 deck, the title slide template is at (<a href="http://stackoverflow.com/questions/15251751/adding-an-image-to-title-slide-using-slidify" target="_blank">thanks</a>Â Ramnath):</p>

<p><code>libraries/frameworks/io2012/partials/titleslide.html</code></p>

<h2>Conclusion</h2>

<p>I found slidify to be a great package and I ended up with, what I consider to be, the cleanest and nicest-looking presentation I've made to date. Also I've learnt a bit of web-programming along the way! I expect I'll be switching from beamer to slidify for future talks too.</p>

<p><a href="http://benjaminlmoore.files.wordpress.com/2014/02/screen-shot-2014-02-24-at-22-20-531.png"><img class="imgfull" alt="The final(ish) presentation in all its glory. Link may not work for long." src="/blog/img/screen-shot-2014-02-24-at-22-20-531.png" width="500" height="318" /></a></p>

		]]></description>
	  </item>
    
  </channel>
</rss>
